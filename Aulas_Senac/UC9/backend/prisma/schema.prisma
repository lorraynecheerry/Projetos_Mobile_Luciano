// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  //provider = "postgresql"
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Motoqueiro {
  id       String @id @default(uuid())
  nome     String
  nusuario String
  senha    String

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())
 

  @@map("motoqueiros")
}

model Usuario {
  id    String @id @default(uuid())
  nome  String
  email String
  senha String

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  Pedido    Pedido?   @relation(fields: [pedidoId], references: [id])
  pedidoId  String?

  @@map("usuarios")
}

model Categoria {
  id   String @id @default(uuid())
  nome String

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  produtos Produto[]

  @@map("categorias")
}

model Produto {
  id         String  @id @default(uuid())
  nome       String
  fabricante String?
  quantidade String
  preco      String
  banner     String

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  categorias  Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId String

  itemPedido itemPedido[]

  @@map("produtos")
}

model Clients {
  id          String    @id @default(uuid())
  nome        String
  cpf_cnpj    String
  celular     String
  rua         String
  complemento String
  bairro      String
  cidade      String
  estado      String
  cep         String
  email       String
  password    String
  create_at   DateTime? @default(now())
  update_at   DateTime? @default(now())

  pedidos Pedido?

  @@map("clientes")
}

model Pedido {
  id          String   @id @default(uuid())
  nPedido     Int      @unique @default(autoincrement())
  valor_total Decimal? @db.Decimal(9, 2)
  status      String   @default("Aguardadndo")
  draft       Boolean  @default(true)
  entrega     Boolean  @default(false)
  aceito      Boolean  @default(false)
  entregador  String?

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  clientes   Clients @relation(fields: [clientesId], references: [id])
  clientesId String  @unique

  Usuario Usuario[]

  itemPedido itemPedido[]
 

  @@map("pedidos")
}

model itemPedido {
  id         String  @id @default(uuid())
  quantidade Int
  valor      Decimal @db.Decimal(9, 2)

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  produtos   Produto @relation(fields: [produtosId], references: [id])
  produtosId String

  pedido    Pedido @relation(fields: [pedidosId], references: [id])
  pedidosId String

  @@map("itemPedidos")
}
